modeltype SIMPLE uses 'http://www.example.org/simplePalladio/DeploymentViewPoint';
//modeltype pcm uses 'http://palladiosimulator.org/PalladioComponentModel/Core/5.2';
modeltype PCM uses 'http://palladiosimulator.org/PalladioComponentModel/ResourceEnvironment/5.2';

transformation EnvironmentTransformations(in s:SIMPLE, out p:PCM);

main() {
	log('1');
	s.rootObjects()[SIMPLE::EnvironmentViewType]->map envvtMapping();
	log('2');
	/*var sim_environmentViewTypes = s->objectsOfType(SIMPLE::EnvironmentViewType);
	log('number of environmentViewType', sim_environmentViewTypes->size());	
	var sim_environmentViewType = sim_environmentViewTypes->asSequence()->first();*/	
}

mapping SIMPLE::EnvironmentViewType::envvtMapping() : PCM::ResourceEnvironment{
	result.resourceContainer_ResourceEnvironment += s->objectsOfType(SIMPLE::Container)->collect(c | c->map containerMapping());
	log('containers done');	
	result.linkingResources__ResourceEnvironment += s->objectsOfType(SIMPLE::Link)->collect(l | l->map linkMapping());
	log('links done');
}
mapping SIMPLE::Link::linkMapping() : PCM::LinkingResource{
	result.id := self.name;
	result.entityName := self.name;
	result.connectedResourceContainers_LinkingResource := self.containers -> collect(c | c.resolveone(PCM::ResourceContainer)) -> asSet();
}
mapping SIMPLE::Container::containerMapping() : PCM::ResourceContainer{
	result.id := self.name;
	result.entityName := self.name;
}