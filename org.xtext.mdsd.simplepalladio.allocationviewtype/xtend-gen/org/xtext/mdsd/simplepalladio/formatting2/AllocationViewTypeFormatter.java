/**
 * generated by Xtext 2.24.0
 */
package org.xtext.mdsd.simplepalladio.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.mdsd.simplepalladio.services.AllocationViewTypeGrammarAccess;
import simplePalladio.DeploymentViewPoint.AllocationContext;
import simplePalladio.DeploymentViewPoint.AllocationViewType;

@SuppressWarnings("all")
public class AllocationViewTypeFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private AllocationViewTypeGrammarAccess _allocationViewTypeGrammarAccess;
  
  protected void _format(final AllocationViewType allocationViewType, @Extension final IFormattableDocument document) {
    EList<AllocationContext> _allocationContexts = allocationViewType.getAllocationContexts();
    for (final AllocationContext allocationContext : _allocationContexts) {
      document.<AllocationContext>format(allocationContext);
    }
  }
  
  public void format(final Object allocationViewType, final IFormattableDocument document) {
    if (allocationViewType instanceof XtextResource) {
      _format((XtextResource)allocationViewType, document);
      return;
    } else if (allocationViewType instanceof AllocationViewType) {
      _format((AllocationViewType)allocationViewType, document);
      return;
    } else if (allocationViewType instanceof EObject) {
      _format((EObject)allocationViewType, document);
      return;
    } else if (allocationViewType == null) {
      _format((Void)null, document);
      return;
    } else if (allocationViewType != null) {
      _format(allocationViewType, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(allocationViewType, document).toString());
    }
  }
}
