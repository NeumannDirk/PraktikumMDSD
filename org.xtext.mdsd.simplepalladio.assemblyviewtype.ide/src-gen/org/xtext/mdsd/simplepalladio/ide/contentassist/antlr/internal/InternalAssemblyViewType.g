/*
 * generated by Xtext 2.24.0
 */
grammar InternalAssemblyViewType;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.mdsd.simplepalladio.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.mdsd.simplepalladio.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.mdsd.simplepalladio.services.AssemblyViewTypeGrammarAccess;

}
@parser::members {
	private AssemblyViewTypeGrammarAccess grammarAccess;

	public void setGrammarAccess(AssemblyViewTypeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleAssemblyViewType
entryRuleAssemblyViewType
:
{ before(grammarAccess.getAssemblyViewTypeRule()); }
	 ruleAssemblyViewType
{ after(grammarAccess.getAssemblyViewTypeRule()); } 
	 EOF 
;

// Rule AssemblyViewType
ruleAssemblyViewType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssemblyViewTypeAccess().getGroup()); }
		(rule__AssemblyViewType__Group__0)
		{ after(grammarAccess.getAssemblyViewTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractSystemElement
entryRuleAbstractSystemElement
:
{ before(grammarAccess.getAbstractSystemElementRule()); }
	 ruleAbstractSystemElement
{ after(grammarAccess.getAbstractSystemElementRule()); } 
	 EOF 
;

// Rule AbstractSystemElement
ruleAbstractSystemElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractSystemElementAccess().getAlternatives()); }
		(rule__AbstractSystemElement__Alternatives)
		{ after(grammarAccess.getAbstractSystemElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSystem
entryRuleSystem
:
{ before(grammarAccess.getSystemRule()); }
	 ruleSystem
{ after(grammarAccess.getSystemRule()); } 
	 EOF 
;

// Rule System
ruleSystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemAccess().getGroup()); }
		(rule__System__Group__0)
		{ after(grammarAccess.getSystemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssemblyContext
entryRuleAssemblyContext
:
{ before(grammarAccess.getAssemblyContextRule()); }
	 ruleAssemblyContext
{ after(grammarAccess.getAssemblyContextRule()); } 
	 EOF 
;

// Rule AssemblyContext
ruleAssemblyContext 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssemblyContextAccess().getGroup()); }
		(rule__AssemblyContext__Group__0)
		{ after(grammarAccess.getAssemblyContextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRole
entryRuleRole
:
{ before(grammarAccess.getRoleRule()); }
	 ruleRole
{ after(grammarAccess.getRoleRule()); } 
	 EOF 
;

// Rule Role
ruleRole 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoleAccess().getGroup()); }
		(rule__Role__Group__0)
		{ after(grammarAccess.getRoleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDelegationConnector
entryRuleDelegationConnector
:
{ before(grammarAccess.getDelegationConnectorRule()); }
	 ruleDelegationConnector
{ after(grammarAccess.getDelegationConnectorRule()); } 
	 EOF 
;

// Rule DelegationConnector
ruleDelegationConnector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDelegationConnectorAccess().getGroup()); }
		(rule__DelegationConnector__Group__0)
		{ after(grammarAccess.getDelegationConnectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssemblyConnector
entryRuleAssemblyConnector
:
{ before(grammarAccess.getAssemblyConnectorRule()); }
	 ruleAssemblyConnector
{ after(grammarAccess.getAssemblyConnectorRule()); } 
	 EOF 
;

// Rule AssemblyConnector
ruleAssemblyConnector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssemblyConnectorAccess().getGroup()); }
		(rule__AssemblyConnector__Group__0)
		{ after(grammarAccess.getAssemblyConnectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractSystemElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractSystemElementAccess().getAssemblyContextParserRuleCall_0()); }
		ruleAssemblyContext
		{ after(grammarAccess.getAbstractSystemElementAccess().getAssemblyContextParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractSystemElementAccess().getRoleParserRuleCall_1()); }
		ruleRole
		{ after(grammarAccess.getAbstractSystemElementAccess().getRoleParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractSystemElementAccess().getDelegationConnectorParserRuleCall_2()); }
		ruleDelegationConnector
		{ after(grammarAccess.getAbstractSystemElementAccess().getDelegationConnectorParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractSystemElementAccess().getAssemblyConnectorParserRuleCall_3()); }
		ruleAssemblyConnector
		{ after(grammarAccess.getAbstractSystemElementAccess().getAssemblyConnectorParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyViewType__Group__0__Impl
	rule__AssemblyViewType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyViewTypeAccess().getAssemblyViewTypeKeyword_0()); }
	'AssemblyViewType'
	{ after(grammarAccess.getAssemblyViewTypeAccess().getAssemblyViewTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyViewType__Group__1__Impl
	rule__AssemblyViewType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyViewTypeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getAssemblyViewTypeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyViewType__Group__2__Impl
	rule__AssemblyViewType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyViewTypeAccess().getSystemsKeyword_2()); }
	'systems'
	{ after(grammarAccess.getAssemblyViewTypeAccess().getSystemsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyViewType__Group__3__Impl
	rule__AssemblyViewType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyViewTypeAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getAssemblyViewTypeAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyViewType__Group__4__Impl
	rule__AssemblyViewType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyViewTypeAccess().getSystemsAssignment_4()); }
	(rule__AssemblyViewType__SystemsAssignment_4)
	{ after(grammarAccess.getAssemblyViewTypeAccess().getSystemsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyViewType__Group__5__Impl
	rule__AssemblyViewType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyViewTypeAccess().getGroup_5()); }
	(rule__AssemblyViewType__Group_5__0)*
	{ after(grammarAccess.getAssemblyViewTypeAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyViewType__Group__6__Impl
	rule__AssemblyViewType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyViewTypeAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getAssemblyViewTypeAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyViewType__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyViewTypeAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getAssemblyViewTypeAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssemblyViewType__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyViewType__Group_5__0__Impl
	rule__AssemblyViewType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyViewTypeAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getAssemblyViewTypeAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyViewType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyViewTypeAccess().getSystemsAssignment_5_1()); }
	(rule__AssemblyViewType__SystemsAssignment_5_1)
	{ after(grammarAccess.getAssemblyViewTypeAccess().getSystemsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__0__Impl
	rule__System__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getSystemKeyword_0()); }
	'System'
	{ after(grammarAccess.getSystemAccess().getSystemKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__1__Impl
	rule__System__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__2__Impl
	rule__System__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getGroup_2()); }
	(rule__System__Group_2__0)?
	{ after(grammarAccess.getSystemAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__3__Impl
	rule__System__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getProvidedInterfacesKeyword_3()); }
	'providedInterfaces'
	{ after(grammarAccess.getSystemAccess().getProvidedInterfacesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__4__Impl
	rule__System__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getSystemAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__5__Impl
	rule__System__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getProvidedInterfacesAssignment_5()); }
	(rule__System__ProvidedInterfacesAssignment_5)
	{ after(grammarAccess.getSystemAccess().getProvidedInterfacesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__6__Impl
	rule__System__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getGroup_6()); }
	(rule__System__Group_6__0)*
	{ after(grammarAccess.getSystemAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__7__Impl
	rule__System__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getSystemAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__8__Impl
	rule__System__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getSystemElementsKeyword_8()); }
	'systemElements'
	{ after(grammarAccess.getSystemAccess().getSystemElementsKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__9__Impl
	rule__System__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_9()); }
	'{'
	{ after(grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__10__Impl
	rule__System__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getSystemElementsAssignment_10()); }
	(rule__System__SystemElementsAssignment_10)
	{ after(grammarAccess.getSystemAccess().getSystemElementsAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__11__Impl
	rule__System__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getGroup_11()); }
	(rule__System__Group_11__0)*
	{ after(grammarAccess.getSystemAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__12__Impl
	rule__System__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_12()); }
	'}'
	{ after(grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_13()); }
	'}'
	{ after(grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_2__0__Impl
	rule__System__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getRequiredInterfacesKeyword_2_0()); }
	'requiredInterfaces'
	{ after(grammarAccess.getSystemAccess().getRequiredInterfacesKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_2__1__Impl
	rule__System__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getLeftParenthesisKeyword_2_1()); }
	'('
	{ after(grammarAccess.getSystemAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_2__2__Impl
	rule__System__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getRequiredInterfacesAssignment_2_2()); }
	(rule__System__RequiredInterfacesAssignment_2_2)
	{ after(grammarAccess.getSystemAccess().getRequiredInterfacesAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_2__3__Impl
	rule__System__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getGroup_2_3()); }
	(rule__System__Group_2_3__0)*
	{ after(grammarAccess.getSystemAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getRightParenthesisKeyword_2_4()); }
	')'
	{ after(grammarAccess.getSystemAccess().getRightParenthesisKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_2_3__0__Impl
	rule__System__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getCommaKeyword_2_3_0()); }
	','
	{ after(grammarAccess.getSystemAccess().getCommaKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getRequiredInterfacesAssignment_2_3_1()); }
	(rule__System__RequiredInterfacesAssignment_2_3_1)
	{ after(grammarAccess.getSystemAccess().getRequiredInterfacesAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_6__0__Impl
	rule__System__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getSystemAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getProvidedInterfacesAssignment_6_1()); }
	(rule__System__ProvidedInterfacesAssignment_6_1)
	{ after(grammarAccess.getSystemAccess().getProvidedInterfacesAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_11__0__Impl
	rule__System__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getCommaKeyword_11_0()); }
	','
	{ after(grammarAccess.getSystemAccess().getCommaKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getSystemElementsAssignment_11_1()); }
	(rule__System__SystemElementsAssignment_11_1)
	{ after(grammarAccess.getSystemAccess().getSystemElementsAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssemblyContext__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group__0__Impl
	rule__AssemblyContext__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getAssemblyContextKeyword_0()); }
	'AssemblyContext'
	{ after(grammarAccess.getAssemblyContextAccess().getAssemblyContextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group__1__Impl
	rule__AssemblyContext__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getNameAssignment_1()); }
	(rule__AssemblyContext__NameAssignment_1)
	{ after(grammarAccess.getAssemblyContextAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group__2__Impl
	rule__AssemblyContext__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAssemblyContextAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group__3__Impl
	rule__AssemblyContext__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getComponentKeyword_3()); }
	'component'
	{ after(grammarAccess.getAssemblyContextAccess().getComponentKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group__4__Impl
	rule__AssemblyContext__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getComponentAssignment_4()); }
	(rule__AssemblyContext__ComponentAssignment_4)
	{ after(grammarAccess.getAssemblyContextAccess().getComponentAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group__5__Impl
	rule__AssemblyContext__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getProvidedRolesKeyword_5()); }
	'providedRoles'
	{ after(grammarAccess.getAssemblyContextAccess().getProvidedRolesKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group__6__Impl
	rule__AssemblyContext__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getLeftParenthesisKeyword_6()); }
	'('
	{ after(grammarAccess.getAssemblyContextAccess().getLeftParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group__7__Impl
	rule__AssemblyContext__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getProvidedRolesAssignment_7()); }
	(rule__AssemblyContext__ProvidedRolesAssignment_7)
	{ after(grammarAccess.getAssemblyContextAccess().getProvidedRolesAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group__8__Impl
	rule__AssemblyContext__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getGroup_8()); }
	(rule__AssemblyContext__Group_8__0)*
	{ after(grammarAccess.getAssemblyContextAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group__9__Impl
	rule__AssemblyContext__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getAssemblyContextAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group__10__Impl
	rule__AssemblyContext__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getGroup_10()); }
	(rule__AssemblyContext__Group_10__0)?
	{ after(grammarAccess.getAssemblyContextAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getAssemblyContextAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssemblyContext__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group_8__0__Impl
	rule__AssemblyContext__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getCommaKeyword_8_0()); }
	','
	{ after(grammarAccess.getAssemblyContextAccess().getCommaKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getProvidedRolesAssignment_8_1()); }
	(rule__AssemblyContext__ProvidedRolesAssignment_8_1)
	{ after(grammarAccess.getAssemblyContextAccess().getProvidedRolesAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssemblyContext__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group_10__0__Impl
	rule__AssemblyContext__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getRequiredRolesKeyword_10_0()); }
	'requiredRoles'
	{ after(grammarAccess.getAssemblyContextAccess().getRequiredRolesKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group_10__1__Impl
	rule__AssemblyContext__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getLeftParenthesisKeyword_10_1()); }
	'('
	{ after(grammarAccess.getAssemblyContextAccess().getLeftParenthesisKeyword_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_10__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group_10__2__Impl
	rule__AssemblyContext__Group_10__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_10__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getRequiredRolesAssignment_10_2()); }
	(rule__AssemblyContext__RequiredRolesAssignment_10_2)
	{ after(grammarAccess.getAssemblyContextAccess().getRequiredRolesAssignment_10_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_10__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group_10__3__Impl
	rule__AssemblyContext__Group_10__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_10__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getGroup_10_3()); }
	(rule__AssemblyContext__Group_10_3__0)*
	{ after(grammarAccess.getAssemblyContextAccess().getGroup_10_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_10__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group_10__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_10__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getRightParenthesisKeyword_10_4()); }
	')'
	{ after(grammarAccess.getAssemblyContextAccess().getRightParenthesisKeyword_10_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssemblyContext__Group_10_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group_10_3__0__Impl
	rule__AssemblyContext__Group_10_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_10_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getCommaKeyword_10_3_0()); }
	','
	{ after(grammarAccess.getAssemblyContextAccess().getCommaKeyword_10_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_10_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyContext__Group_10_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__Group_10_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyContextAccess().getRequiredRolesAssignment_10_3_1()); }
	(rule__AssemblyContext__RequiredRolesAssignment_10_3_1)
	{ after(grammarAccess.getAssemblyContextAccess().getRequiredRolesAssignment_10_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Role__Group__0__Impl
	rule__Role__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleAccess().getRoleKeyword_0()); }
	'Role'
	{ after(grammarAccess.getRoleAccess().getRoleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Role__Group__1__Impl
	rule__Role__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Role__Group__2__Impl
	rule__Role__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleAccess().getInterfaceKeyword_2()); }
	'interface'
	{ after(grammarAccess.getRoleAccess().getInterfaceKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Role__Group__3__Impl
	rule__Role__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleAccess().getInterfaceAssignment_3()); }
	(rule__Role__InterfaceAssignment_3)
	{ after(grammarAccess.getRoleAccess().getInterfaceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Role__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DelegationConnector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelegationConnector__Group__0__Impl
	rule__DelegationConnector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelegationConnectorAccess().getDelegationConnectorKeyword_0()); }
	'DelegationConnector'
	{ after(grammarAccess.getDelegationConnectorAccess().getDelegationConnectorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelegationConnector__Group__1__Impl
	rule__DelegationConnector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelegationConnectorAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDelegationConnectorAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelegationConnector__Group__2__Impl
	rule__DelegationConnector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelegationConnectorAccess().getRoleKeyword_2()); }
	'role'
	{ after(grammarAccess.getDelegationConnectorAccess().getRoleKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelegationConnector__Group__3__Impl
	rule__DelegationConnector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelegationConnectorAccess().getRoleAssignment_3()); }
	(rule__DelegationConnector__RoleAssignment_3)
	{ after(grammarAccess.getDelegationConnectorAccess().getRoleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelegationConnector__Group__4__Impl
	rule__DelegationConnector__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelegationConnectorAccess().getInterfaceKeyword_4()); }
	'interface'
	{ after(grammarAccess.getDelegationConnectorAccess().getInterfaceKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelegationConnector__Group__5__Impl
	rule__DelegationConnector__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelegationConnectorAccess().getInterfaceAssignment_5()); }
	(rule__DelegationConnector__InterfaceAssignment_5)
	{ after(grammarAccess.getDelegationConnectorAccess().getInterfaceAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelegationConnector__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelegationConnectorAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getDelegationConnectorAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssemblyConnector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyConnector__Group__0__Impl
	rule__AssemblyConnector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyConnectorAccess().getAssemblyConnectorKeyword_0()); }
	'AssemblyConnector'
	{ after(grammarAccess.getAssemblyConnectorAccess().getAssemblyConnectorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyConnector__Group__1__Impl
	rule__AssemblyConnector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyConnectorAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getAssemblyConnectorAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyConnector__Group__2__Impl
	rule__AssemblyConnector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyConnectorAccess().getProvidedRoleKeyword_2()); }
	'providedRole'
	{ after(grammarAccess.getAssemblyConnectorAccess().getProvidedRoleKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyConnector__Group__3__Impl
	rule__AssemblyConnector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyConnectorAccess().getProvidedRoleAssignment_3()); }
	(rule__AssemblyConnector__ProvidedRoleAssignment_3)
	{ after(grammarAccess.getAssemblyConnectorAccess().getProvidedRoleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyConnector__Group__4__Impl
	rule__AssemblyConnector__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyConnectorAccess().getRequiredRoleKeyword_4()); }
	'requiredRole'
	{ after(grammarAccess.getAssemblyConnectorAccess().getRequiredRoleKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyConnector__Group__5__Impl
	rule__AssemblyConnector__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyConnectorAccess().getRequiredRoleAssignment_5()); }
	(rule__AssemblyConnector__RequiredRoleAssignment_5)
	{ after(grammarAccess.getAssemblyConnectorAccess().getRequiredRoleAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssemblyConnector__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyConnectorAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getAssemblyConnectorAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssemblyViewType__SystemsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyViewTypeAccess().getSystemsSystemParserRuleCall_4_0()); }
		ruleSystem
		{ after(grammarAccess.getAssemblyViewTypeAccess().getSystemsSystemParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyViewType__SystemsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyViewTypeAccess().getSystemsSystemParserRuleCall_5_1_0()); }
		ruleSystem
		{ after(grammarAccess.getAssemblyViewTypeAccess().getSystemsSystemParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__RequiredInterfacesAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getRequiredInterfacesInterfaceCrossReference_2_2_0()); }
		(
			{ before(grammarAccess.getSystemAccess().getRequiredInterfacesInterfaceEStringParserRuleCall_2_2_0_1()); }
			ruleEString
			{ after(grammarAccess.getSystemAccess().getRequiredInterfacesInterfaceEStringParserRuleCall_2_2_0_1()); }
		)
		{ after(grammarAccess.getSystemAccess().getRequiredInterfacesInterfaceCrossReference_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__RequiredInterfacesAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getRequiredInterfacesInterfaceCrossReference_2_3_1_0()); }
		(
			{ before(grammarAccess.getSystemAccess().getRequiredInterfacesInterfaceEStringParserRuleCall_2_3_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getSystemAccess().getRequiredInterfacesInterfaceEStringParserRuleCall_2_3_1_0_1()); }
		)
		{ after(grammarAccess.getSystemAccess().getRequiredInterfacesInterfaceCrossReference_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__ProvidedInterfacesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getProvidedInterfacesInterfaceCrossReference_5_0()); }
		(
			{ before(grammarAccess.getSystemAccess().getProvidedInterfacesInterfaceEStringParserRuleCall_5_0_1()); }
			ruleEString
			{ after(grammarAccess.getSystemAccess().getProvidedInterfacesInterfaceEStringParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getSystemAccess().getProvidedInterfacesInterfaceCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__ProvidedInterfacesAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getProvidedInterfacesInterfaceCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getSystemAccess().getProvidedInterfacesInterfaceEStringParserRuleCall_6_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getSystemAccess().getProvidedInterfacesInterfaceEStringParserRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getSystemAccess().getProvidedInterfacesInterfaceCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__SystemElementsAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getSystemElementsAbstractSystemElementParserRuleCall_10_0()); }
		ruleAbstractSystemElement
		{ after(grammarAccess.getSystemAccess().getSystemElementsAbstractSystemElementParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__SystemElementsAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getSystemElementsAbstractSystemElementParserRuleCall_11_1_0()); }
		ruleAbstractSystemElement
		{ after(grammarAccess.getSystemAccess().getSystemElementsAbstractSystemElementParserRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyContextAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getAssemblyContextAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__ComponentAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyContextAccess().getComponentAbstractComponentCrossReference_4_0()); }
		(
			{ before(grammarAccess.getAssemblyContextAccess().getComponentAbstractComponentEStringParserRuleCall_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getAssemblyContextAccess().getComponentAbstractComponentEStringParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getAssemblyContextAccess().getComponentAbstractComponentCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__ProvidedRolesAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyContextAccess().getProvidedRolesRoleCrossReference_7_0()); }
		(
			{ before(grammarAccess.getAssemblyContextAccess().getProvidedRolesRoleEStringParserRuleCall_7_0_1()); }
			ruleEString
			{ after(grammarAccess.getAssemblyContextAccess().getProvidedRolesRoleEStringParserRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getAssemblyContextAccess().getProvidedRolesRoleCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__ProvidedRolesAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyContextAccess().getProvidedRolesRoleCrossReference_8_1_0()); }
		(
			{ before(grammarAccess.getAssemblyContextAccess().getProvidedRolesRoleEStringParserRuleCall_8_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getAssemblyContextAccess().getProvidedRolesRoleEStringParserRuleCall_8_1_0_1()); }
		)
		{ after(grammarAccess.getAssemblyContextAccess().getProvidedRolesRoleCrossReference_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__RequiredRolesAssignment_10_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyContextAccess().getRequiredRolesRoleCrossReference_10_2_0()); }
		(
			{ before(grammarAccess.getAssemblyContextAccess().getRequiredRolesRoleEStringParserRuleCall_10_2_0_1()); }
			ruleEString
			{ after(grammarAccess.getAssemblyContextAccess().getRequiredRolesRoleEStringParserRuleCall_10_2_0_1()); }
		)
		{ after(grammarAccess.getAssemblyContextAccess().getRequiredRolesRoleCrossReference_10_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyContext__RequiredRolesAssignment_10_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyContextAccess().getRequiredRolesRoleCrossReference_10_3_1_0()); }
		(
			{ before(grammarAccess.getAssemblyContextAccess().getRequiredRolesRoleEStringParserRuleCall_10_3_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getAssemblyContextAccess().getRequiredRolesRoleEStringParserRuleCall_10_3_1_0_1()); }
		)
		{ after(grammarAccess.getAssemblyContextAccess().getRequiredRolesRoleCrossReference_10_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__InterfaceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleAccess().getInterfaceInterfaceCrossReference_3_0()); }
		(
			{ before(grammarAccess.getRoleAccess().getInterfaceInterfaceEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getRoleAccess().getInterfaceInterfaceEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getRoleAccess().getInterfaceInterfaceCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__RoleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDelegationConnectorAccess().getRoleRoleCrossReference_3_0()); }
		(
			{ before(grammarAccess.getDelegationConnectorAccess().getRoleRoleEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getDelegationConnectorAccess().getRoleRoleEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getDelegationConnectorAccess().getRoleRoleCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelegationConnector__InterfaceAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDelegationConnectorAccess().getInterfaceInterfaceCrossReference_5_0()); }
		(
			{ before(grammarAccess.getDelegationConnectorAccess().getInterfaceInterfaceEStringParserRuleCall_5_0_1()); }
			ruleEString
			{ after(grammarAccess.getDelegationConnectorAccess().getInterfaceInterfaceEStringParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getDelegationConnectorAccess().getInterfaceInterfaceCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__ProvidedRoleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyConnectorAccess().getProvidedRoleRoleCrossReference_3_0()); }
		(
			{ before(grammarAccess.getAssemblyConnectorAccess().getProvidedRoleRoleEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getAssemblyConnectorAccess().getProvidedRoleRoleEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getAssemblyConnectorAccess().getProvidedRoleRoleCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyConnector__RequiredRoleAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyConnectorAccess().getRequiredRoleRoleCrossReference_5_0()); }
		(
			{ before(grammarAccess.getAssemblyConnectorAccess().getRequiredRoleRoleEStringParserRuleCall_5_0_1()); }
			ruleEString
			{ after(grammarAccess.getAssemblyConnectorAccess().getRequiredRoleRoleEStringParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getAssemblyConnectorAccess().getRequiredRoleRoleCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
