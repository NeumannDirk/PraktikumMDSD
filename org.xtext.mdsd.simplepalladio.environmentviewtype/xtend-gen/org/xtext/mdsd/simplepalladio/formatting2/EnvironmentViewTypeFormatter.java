/**
 * generated by Xtext 2.24.0
 */
package org.xtext.mdsd.simplepalladio.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.mdsd.simplepalladio.services.EnvironmentViewTypeGrammarAccess;
import simplePalladio.DeploymentViewPoint.AbstractEnvironmentElement;
import simplePalladio.DeploymentViewPoint.EnvironmentViewType;

@SuppressWarnings("all")
public class EnvironmentViewTypeFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private EnvironmentViewTypeGrammarAccess _environmentViewTypeGrammarAccess;
  
  protected void _format(final EnvironmentViewType environmentViewType, @Extension final IFormattableDocument document) {
    EList<AbstractEnvironmentElement> _environmentElements = environmentViewType.getEnvironmentElements();
    for (final AbstractEnvironmentElement abstractEnvironmentElement : _environmentElements) {
      document.<AbstractEnvironmentElement>format(abstractEnvironmentElement);
    }
  }
  
  public void format(final Object environmentViewType, final IFormattableDocument document) {
    if (environmentViewType instanceof XtextResource) {
      _format((XtextResource)environmentViewType, document);
      return;
    } else if (environmentViewType instanceof EnvironmentViewType) {
      _format((EnvironmentViewType)environmentViewType, document);
      return;
    } else if (environmentViewType instanceof EObject) {
      _format((EObject)environmentViewType, document);
      return;
    } else if (environmentViewType == null) {
      _format((Void)null, document);
      return;
    } else if (environmentViewType != null) {
      _format(environmentViewType, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(environmentViewType, document).toString());
    }
  }
}
