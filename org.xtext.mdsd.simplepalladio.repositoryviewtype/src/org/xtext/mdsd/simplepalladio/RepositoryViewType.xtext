// automatically generated by Xtext
grammar org.xtext.mdsd.simplepalladio.RepositoryViewType with org.eclipse.xtext.common.Terminals

import "platform:/resource/SimplePalladio/model/simplePalladio.ecore#//Common" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "platform:/resource/SimplePalladio/model/simplePalladio.ecore#//SystemIndependentViewPoint" as SystemIndependentViewPoint
import "platform:/resource/SimplePalladio/model/simplePalladio.ecore#//AssemblyViewPoint" as AssemblyViewPoint

RepositoryViewType returns SystemIndependentViewPoint::RepositoryViewType:
	'RepositoryViewType'
	'{'
		'repositoryElements' '{' repositoryElements+=AbstractRepositoryElement ( "," repositoryElements+=AbstractRepositoryElement)* '}' 
	'}';

AbstractRepositoryElement returns SystemIndependentViewPoint::AbstractRepositoryElement:
	Interface | CompositeComponent | Signature | Component;


InterfaceCommunicator returns SystemIndependentViewPoint::InterfaceCommunicator:
	CompositeComponent | Component;

AbstractComponent returns SystemIndependentViewPoint::AbstractComponent:
	CompositeComponent | Component;

BehaviorElement returns SystemIndependentViewPoint::BehaviorElement:
	InternalAction | ExternalCall | Loop | Branch;

EString returns ecore::EString:
	STRING | ID;

Interface returns SystemIndependentViewPoint::Interface:
	'Interface'
	name=EString
	'{'
		'signatures' '(' signatures+=[SystemIndependentViewPoint::Signature|EString] ( "," signatures+=[SystemIndependentViewPoint::Signature|EString])* ')'  
	'}';

CompositeComponent returns SystemIndependentViewPoint::CompositeComponent:
	'CompositeComponent'
	name=EString
	'{'
		('requiredInterfaces' '(' requiredInterfaces+=[SystemIndependentViewPoint::Interface|EString] ( "," requiredInterfaces+=[SystemIndependentViewPoint::Interface|EString])* ')' )?
		'providedInterfaces' '(' providedInterfaces+=[SystemIndependentViewPoint::Interface|EString] ( "," providedInterfaces+=[SystemIndependentViewPoint::Interface|EString])* ')' 
		'system' system=[AssemblyViewPoint::System|EString]
	'}';

Signature returns SystemIndependentViewPoint::Signature:
	'Signature'
	name=EString
	'{'
		'returnValue' returnValue=Type
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

Component returns SystemIndependentViewPoint::Component:
	'Component'
	name=EString
	'{'
		('requiredInterfaces' '(' requiredInterfaces+=[SystemIndependentViewPoint::Interface|EString] ( "," requiredInterfaces+=[SystemIndependentViewPoint::Interface|EString])* ')' )?
		'providedInterfaces' '(' providedInterfaces+=[SystemIndependentViewPoint::Interface|EString] ( "," providedInterfaces+=[SystemIndependentViewPoint::Interface|EString])* ')' 
		'services' '{' services+=Service ( "," services+=Service)* '}' 
	'}';

enum Type returns SystemIndependentViewPoint::Type:
				VOID = 'VOID' | BOOLEAN = 'BOOLEAN' | CHAR = 'CHAR' | DATE = 'DATE' | DOUBLE = 'DOUBLE' | FLOAT = 'FLOAT' | LIST = 'LIST' | INT = 'INT' | LONG = 'LONG' | MAP = 'MAP' | STRING = 'STRING';

Parameter returns SystemIndependentViewPoint::Parameter:
	'Parameter'
	name=EString
	'{'
		'type' type=Type
	'}';

Service returns SystemIndependentViewPoint::Service:
	'Service'
	'{'
		'signature' signature=[SystemIndependentViewPoint::Signature|EString]
		'behaviourDescription' behaviourDescription=BehaviourDescription
	'}';

BehaviourDescription returns SystemIndependentViewPoint::BehaviourDescription:
	{SystemIndependentViewPoint::BehaviourDescription}
	'BehaviourDescription'
	'{'
		('behaviorElements' '{' behaviorElements+=BehaviorElement ( "," behaviorElements+=BehaviorElement)* '}' )?
	'}';

InternalAction returns SystemIndependentViewPoint::InternalAction:
	{SystemIndependentViewPoint::InternalAction}
	'InternalAction'
	;

ExternalCall returns SystemIndependentViewPoint::ExternalCall:
	'ExternalCall'
	'{'
		'signature' signature=[SystemIndependentViewPoint::Signature|EString]
	'}';

Loop returns SystemIndependentViewPoint::Loop:
	{SystemIndependentViewPoint::Loop}
	'Loop'
	'{'
		('behaviorElements' '(' behaviorElements+=[SystemIndependentViewPoint::BehaviorElement|EString] ( "," behaviorElements+=[SystemIndependentViewPoint::BehaviorElement|EString])* ')' )?
	'}';

Branch returns SystemIndependentViewPoint::Branch:
	{SystemIndependentViewPoint::Branch}
	'Branch'
	'{'
		('behaviorElements' '(' behaviorElements+=[SystemIndependentViewPoint::BehaviorElement|EString] ( "," behaviorElements+=[SystemIndependentViewPoint::BehaviorElement|EString])* ')' )?
	'}';
