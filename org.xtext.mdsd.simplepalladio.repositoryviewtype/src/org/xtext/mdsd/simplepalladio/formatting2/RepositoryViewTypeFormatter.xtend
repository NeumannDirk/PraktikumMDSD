/*
 * generated by Xtext 2.24.0
 */
package org.xtext.mdsd.simplepalladio.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.mdsd.simplepalladio.services.RepositoryViewTypeGrammarAccess
import simplePalladio.SystemIndependentViewPoint.RepositoryViewType
import simplePalladio.SystemIndependentViewPoint.Signature

class RepositoryViewTypeFormatter extends AbstractFormatter2 {
	
	@Inject extension RepositoryViewTypeGrammarAccess

	def dispatch void format(RepositoryViewType repositoryViewType, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (abstractRepositoryElement : repositoryViewType.repositoryElements) {
			abstractRepositoryElement.format
		}
	}

	def dispatch void format(Signature signature, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (parameter : signature.parameters) {
			parameter.format
		}
	}
	
	// TODO: implement for Component, Service, BehaviourDescription
}
