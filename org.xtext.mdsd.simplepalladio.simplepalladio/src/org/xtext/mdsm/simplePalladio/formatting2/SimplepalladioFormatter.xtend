/*
 * generated by Xtext 2.24.0
 */
package org.xtext.mdsm.simplePalladio.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.mdsm.simplePalladio.services.SimplepalladioGrammarAccess
import org.xtext.mdsm.simplePalladio.simplepalladio.Model
import simplePalladio.SystemIndependentViewPoint.RepositoryViewType

class SimplepalladioFormatter extends AbstractFormatter2 {
	
	@Inject extension SimplepalladioGrammarAccess

	def dispatch void format(Model model, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		model.repositoryViewType.format
		model.assemblyViewType.format
		model.environmentViewType.format
		model.allocationViewType.format
	}

	def dispatch void format(RepositoryViewType repositoryViewType, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (abstractRepositoryElement : repositoryViewType.repositoryElements) {
			abstractRepositoryElement.format
		}
	}
	
	// TODO: implement for Signature, Component, Service, BehaviourDescription, AssemblyViewType, System, EnvironmentViewType, AllocationViewType
}
